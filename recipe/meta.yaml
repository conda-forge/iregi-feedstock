{% set name = "iregi" %}
{% set version = "1.1.0" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  - url: https://github.com/hep-packaging-coordination/mg5amcnlo-release-mirror/releases/download/3.5.7/MG5_aMC_v3.5.7.tar.gz
    sha256: ca3e027f078438318bd4143a102aebc2d51358f537b5d52bbc574fe49a6a901e
    patches:
      # FIXME: makefile_ML5_lib tries to build everything by default
      - makefile_ML5_lib.patch
      # FIXME: mg5amcnlo uses 'avh_olo_forIREGI' instead of 'avh_olo' is mis_warp.f90
      - use-avh_olo.patch

build:
  number: 0

outputs:
  - name: {{ name }}-static

    build:
      skip: true  # [win]
      script:
        - cd vendor/IREGI/src/

        # Remove vendored code that is on conda-forge
        - rm -rf oneloop
        - rm -rf qcdloop
        - rm makefile
        - rm makefile_oneloop
        - rm makefile_qcdloop

        # Build
        # Enable extended-source with '-ffixed-line-length-none' for long lines
        # c.f. https://gcc.gnu.org/onlinedocs/gfortran/Fortran-Dialect-Options.html#index-ffixed-line-length-n
        # The build is not parallel safe, so must compile single threaded
        - make -f makefile_ML5_lib FC=$FC FFLAGS="$FFLAGS -std=legacy -Wall -ffixed-line-length-none -I$PREFIX/include/oneloop"

        # Install
        - mv libiregi.a $PREFIX/lib/
        - mkdir -p $PREFIX/include/iregi
        - mv *.mod $PREFIX/include/iregi/

    requirements:
      build:
        - {{ stdlib('c') }}
        - {{ compiler('fortran') }}
        - make
        - libtool
      host:
        - oneloop

    test:
      commands:
        - test -f $PREFIX/lib/libiregi.a
        - test -f $PREFIX/include/iregi/binary_tree.mod
        - test -f $PREFIX/include/iregi/cmatrix_base.mod
        - test -f $PREFIX/include/iregi/cpave_reduce.mod
        - test -f $PREFIX/include/iregi/csi_reduce.mod
        - test -f $PREFIX/include/iregi/cti_reduce.mod
        - test -f $PREFIX/include/iregi/funlib.mod
        - test -f $PREFIX/include/iregi/global.mod
        - test -f $PREFIX/include/iregi/gti_reduce.mod
        - test -f $PREFIX/include/iregi/kinematics.mod
        - test -f $PREFIX/include/iregi/linear_algebra.mod
        - test -f $PREFIX/include/iregi/matrices.mod
        - test -f $PREFIX/include/iregi/matrix_base.mod
        - test -f $PREFIX/include/iregi/mis_warp.mod
        - test -f $PREFIX/include/iregi/pave_reduce.mod
        - test -f $PREFIX/include/iregi/si_reduce.mod
        - test -f $PREFIX/include/iregi/special_fun.mod
        - test -f $PREFIX/include/iregi/ti_reduce.mod

about:
  home: https://github.com/mg5amcnlo/mg5amcnlo/tree/3.x/vendor/IREGI/src
  summary: 'IREGI: one-loop tensor Integral REduction with General propagator Indices'
  description: |
    IREGI is a package for one-loop tensor Integral REduction with General
    propagator Indices.

    The algorithm was proposed by G. Duplancic, B. Nizic
    (DOI: [10.1140/epjc/s2004-01723-7](https://doi.org/10.1140/epjc/s2004-01723-7)).

    This implementation for MADLOOP5 in MadGraph5_aMC@NLO was originally
    authored by Hua-Sheng Shao.
  # IREGI source only exists in the MG5_aMC@NLO repo and so has the same license
  # modified University of Illinois/NCSA license
  license: LicenseRef-NCSA
  license_family: OTHER
  license_file: LICENSE
  dev_url: https://github.com/mg5amcnlo/mg5amcnlo/tree/3.x/vendor/IREGI/src

extra:
  feedstock-name: iregi
  recipe-maintainers:
    - matthewfeickert
